# ##
# # You should look at the following URL's in order to grasp a solid understanding
# # of Nginx configuration files in order to fully unleash the power of Nginx.
# # https://www.nginx.com/resources/wiki/start/
# # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# # https://wiki.debian.org/Nginx/DirectoryStructure
# #
# # In most cases, administrators will remove this file from sites-enabled/ and
# # leave it as reference inside of sites-available where it will continue to be
# # updated by the nginx packaging team.
# #
# # This file will automatically load configuration files provided by other
# # applications, such as Drupal or Wordpress. These applications will be made
# # available underneath a path with that package name, such as /drupal8.
# #
# # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
# ##

# # # Default server configuration
# # server {
# #     listen 80;
# #     server_name localhost;

# #     location /adminer/ {
# #         return 301 https://$host$request_uri; 
# # 	}

# # 	location /website/ {
# # 	return 301 https://$host$request_uri; 
# # 	}
# # }	


# server {
# 	listen 443 ssl http2;
# 	listen [::]:443 ssl http2;

# 	# SSL configuration
# 	ssl_certificate /etc/nginx/ssl/nginx.crt;
#     ssl_certificate_key /etc/nginx/ssl/nginx.key;
# 	ssl_protocols TLSv1.2 TLSv1.3;
# 	#
# 	# listen 443 ssl default_server;
# 	# listen [::]:443 ssl default_server;
# 	#
# 	# Note: You should disable gzip for SSL traffic.
# 	# See: https://bugs.debian.org/773332
# 	#
# 	# Read up on ssl_ciphers to ensure a secure configuration.
# 	# See: https://bugs.debian.org/765782
# 	#
# 	# Self signed certs generated by the ssl-cert package
# 	# Don't use them in a production server!
# 	#
# 	# include snippets/snakeoil.conf;



# 	root /var/www/html;

# 	# Add index.php to the list if you are using PHP
# 	index index.php index.html index.htm index.nginx-debian.html;

# 	server_name localhost;

# 		location /api {
# autoindex on;
# }

# 	# location /adminer/ {
# 	# 	# Forward the request to Adminer running on port 8080
# 	# 	proxy_pass http://adminer:8080/;

# 	# 	# Remove the /adminer prefix before forwarding the request to Adminer
# 	# 	rewrite ^/adminer(/.*)$ $1 break;

# 	# 	# Forward the original headers to Adminer
# 	# 	proxy_set_header Host $host;
# 	# 	proxy_set_header X-Real-IP $remote_addr;  # Real client IP
# 	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forwarded client IPs
# 	# 	proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http or https)
# 	# 	proxy_set_header X-Forwarded-Port $server_port;  # Forward the original port
# 	# 	proxy_set_header X-Forwarded-Host $host;  # Forward the original host

# 	# 	# Handle redirects from Adminer and ensure they stay within the /adminer path
# 	# 	# Instead of using localhost, use the internal container name (adminer) or the proper container address
# 	# 	proxy_redirect http://adminer:8080/ /adminer/;  # Redirects from adminer container to /adminer/
# 	# 	proxy_redirect http://adminer/ /adminer/;  # If redirects from localhost are seen
# 	# }


#     # location / {
#     #     try_files $uri $uri/ /index.php?$args;  # WordPress-spezifische Weiterleitung
#     # }


#     # PHP-Dateien verarbeiten
#     location ~ \.php$ {
# 		    limit_except GET {
#         deny all;
#     }
#         include snippets/fastcgi-php.conf;  # Enthält wichtige FastCGI-Parameter
#         fastcgi_pass wp-php:9000;  # PHP-FPM-Container
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         include fastcgi_params;  # Enthält Standard-FastCGI-Parameter
#     }
# 	# pass PHP scripts to FastCGI server
# 	#
#     # location /adminer {
# 	# 	rewrite ^/adminer/(.*)$ adminer.php last;
#     #     proxy_pass http://adminer:8080;  # Weiterleitung an Adminer-Container
#     #     proxy_set_header Host $host;
#     #     proxy_set_header X-Real-IP $remote_addr;
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto $scheme;
#     # }
# 	location /adminer {
# 		proxy_pass http://adminer:8080/adminer.php;
# 		proxy_set_header Host $host;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;
# 	}

# 	location /website {
# 		proxy_pass http://static_site:81/;
# 		proxy_set_header Host $host;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;
# 	}

# 	location ~ \.php$ {
#         include fastcgi_params; # Lädt Standard-FastCGI-Parameter
#         fastcgi_pass 127.0.0.1:9000; # Adresse des PHP-FPM-Servers
#         fastcgi_index index.php;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param QUERY_STRING $query_string;
#         fastcgi_param REQUEST_METHOD $request_method;
#         fastcgi_param CONTENT_TYPE $content_type;
#         fastcgi_param CONTENT_LENGTH $content_length;
#     }

# 	# Weiterleitung von statischen Dateien
# 	# location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2)$ {
# 	# 	root /var/www/html;  # Statische Dateien direkt vom Apache-Server
# 	# 	try_files $uri $uri/ =404;  # Falls die Datei nicht existiert, gib einen 404-Fehler zurück
# 	# }
# 	# 	location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2)$ {
# 	# 	proxy_pass http://adminer:8080;
# 	# 	proxy_set_header Host $host;
# 	# 	proxy_set_header X-Real-IP $remote_addr;
# 	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# }


	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
server {
	listen 80;
	listen [::]:80;

	server_name example.com;

	root /var/www/example.com;
	index index.html;

location /api {
	autoindex off;
	root /tmp/www;
	index index1.html;
    limit_except POST PUT DELETE {
 # Nur dieses Subnetz darf POST/PUT/DELETE
 		deny all;
       	return 403 "<html><body><h1>403 Forbidden</h1><p>Zugriff verweigert: Nur IPs aus dem Subnetz 192.168.1.0/24 dürfen POST, PUT oder DELETE verwenden.</p></body></html>";           # Andere IPs werden blockiert
    }

}

	location / {
		autoindex on;
		root /tmp/www;
		# return 302 http://localhost:80/api;
		# try_files $uri $uri/ =404;
	}
	error_page 510 502 513 504 /5xx.html;
}

# server {
#     listen 80;
#     server_name example.com;
#     root /var/www/html;
#     index index.php index.html;

#     # PHP-Dateien verarbeiten
#     location ~ \.php$ {
#         include snippets/fastcgi-php.conf;

#         # Verbindung zu PHP-FPM
#         fastcgi_pass wp-php:9000;

#         # Standard FastCGI-Parameter
#         fastcgi_param QUERY_STRING       $query_string;
#         fastcgi_param REQUEST_METHOD     $request_method;
#         fastcgi_param CONTENT_TYPE       $content_type;
#         fastcgi_param CONTENT_LENGTH     $content_length;

#         fastcgi_param SCRIPT_NAME        $fastcgi_script_name;
#         fastcgi_param SCRIPT_FILENAME    $document_root$fastcgi_script_name;
#         fastcgi_param REQUEST_URI        $request_uri;
#         fastcgi_param DOCUMENT_URI       $document_uri;
#         fastcgi_param DOCUMENT_ROOT      $document_root;
#         fastcgi_param SERVER_PROTOCOL    $server_protocol;
#         fastcgi_param REQUEST_SCHEME     $scheme;
#         fastcgi_param HTTPS              $https if_not_empty;

#         fastcgi_param GATEWAY_INTERFACE  CGI/1.1;
#         fastcgi_param SERVER_SOFTWARE    nginx/$nginx_version;

#         fastcgi_param REMOTE_ADDR        $remote_addr;
#         fastcgi_param REMOTE_PORT        $remote_port;
#         fastcgi_param SERVER_ADDR        $server_addr;
#         fastcgi_param SERVER_PORT        $server_port;
#         fastcgi_param SERVER_NAME        $server_name;

#         # Zusätzliche PHP-spezifische Parameter
#         fastcgi_param PATH_INFO          $fastcgi_path_info;
#         fastcgi_param PATH_TRANSLATED    $document_root$fastcgi_path_info;
#         fastcgi_param REDIRECT_STATUS    200;

#         # Benutzerdefinierte PHP-Einstellungen
#         fastcgi_param PHP_VALUE          "upload_max_filesize=10M \n post_max_size=12M \n max_execution_time=30";
#         fastcgi_param PHP_ADMIN_VALUE    "open_basedir=/var/www/html:/tmp";

#         # Weitere benutzerdefinierte Header
#         fastcgi_param HTTP_X_FORWARDED_FOR $http_x_forwarded_for;

#         # Einbindung der Standard-FastCGI-Parameter
#         include fastcgi_params;
#     }

#     # Statische Dateien direkt ausliefern
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

#     # Fehlerseiten
#     error_page 404 /404.html;
#     error_page 510 502 513 504 /5xx.html;
# }